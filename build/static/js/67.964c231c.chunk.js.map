{"version":3,"file":"static/js/67.964c231c.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/utils/wildcards.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs"],"sourcesContent":["import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    let [forceRender] = useForceUpdate();\n    const forceRenderLayoutGroup = useContext(LayoutGroupContext).forceRender;\n    if (forceRenderLayoutGroup)\n        forceRender = forceRenderLayoutGroup;\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exiting = new Set();\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exiting.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1) {\n            exiting.add(key);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exiting.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach((key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        const onExit = () => {\n            allChildren.delete(key);\n            exiting.delete(key);\n            // Remove this child from the present children\n            const removeIndex = presentChildren.current.findIndex((presentChild) => presentChild.key === key);\n            presentChildren.current.splice(removeIndex, 1);\n            // Defer re-rendering until all exiting children have indeed left\n            if (!exiting.size) {\n                presentChildren.current = filteredChildren;\n                if (isMounted.current === false)\n                    return;\n                forceRender();\n                onExitComplete && onExitComplete();\n            }\n        };\n        childrenToRender.splice(insertionIndex, 0, React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exiting.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exiting.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { frame } from '../frameloop/index.mjs';\nimport { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\nconst frame = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nfunction cancelFrame(process) {\n    stepsOrder.forEach((key) => steps[key].cancel(process));\n}\n\nexport { cancelFrame, frame, steps };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay;\n        const isInDelayPhase = timeWithoutDelay < 0;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && currentTime <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelFrame, frame } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\nimport { fillWildcardKeyframes } from './wildcards.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        return fillWildcardKeyframes(origin, target);\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","function fillWildcardKeyframes(origin, [...keyframes]) {\n    /**\n     * Ensure an wildcard keyframes are hydrated by the origin.\n     */\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? origin : keyframes[i - 1];\n        }\n    }\n    return keyframes;\n}\n\nexport { fillWildcardKeyframes };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { frame } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.12.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { frame } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { frame, cancelFrame } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { frame } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelFrame, steps, frame } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","const noop = (any) => any;\n\nexport { noop };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n"],"names":["useIsMounted","isMounted","useRef","useIsomorphicLayoutEffect","current","PopChildMeasure","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","prevProps","element","this","props","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","children","React","PopChild","_ref","id","useId","ref","useInsertionEffect","_size$current","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","concat","removeChild","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","_step","_iterator","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","_createForOfIteratorHelper","values","register","delete","undefined","forEach","_","PresenceContext","Map","getChildKey","child","AnimatePresence","_ref$initial","exitBeforeEnter","_ref$presenceAffectsL","_ref$mode","invariant","_useForceUpdate","_useState","useState","_useState2","_slicedToArray","forcedRenderCount","setForcedRenderCount","forceRender","useCallback","frame","useForceUpdate","forceRenderLayoutGroup","useContext","LayoutGroupContext","callback","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exiting","Set","presentChildren","allChildren","isInitialRender","updateChildLookup","clear","useEffect","map","_toConsumableArray","presentKeys","targetKeys","numPresent","indexOf","add","get","insertionIndex","splice","removeIndex","findIndex","presentChild","has","cloneElement","createContext","frameData","delta","timestamp","isProcessing","useDefaultElapsed","runNextFrame","stepsOrder","steps","reduce","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","schedule","addToCurrentFrame","buffer","cancel","index","process","createRenderStep","processStep","stepId","processFrame","Math","max","min","requestAnimationFrame","keepAlive","immediate","cancelFrame","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","isRefObject","Object","prototype","hasOwnProperty","isVariantLabel","v","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","_getCurrentTreeVarian","inherit","getCurrentTreeVariants","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","isEnabled","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","SwitchLayoutGroupContext","motionComponentSymbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","visualState","isBrowser","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","createMotionProxy","createConfig","Proxy","componentCache","_target","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","right","bottom","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","transformName","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_objectWithoutProperties","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","renderedChildren","camelToDash","str","replace","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","_Feature","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","noop","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","_definition","isColorString","testProp","splitColor","aName","bName","cName","_v$match","match","_v$match2","_defineProperty","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","numbers","tokenised","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","warning","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","absoluteTimes","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","now","performance","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","createAcceleratedAnimation","valueName","_options$duration","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZero","getZeroUnit","potentialUnitType","getValueTransition","getKeyframes","isTargetAnimatable","_toArray","fillWildcardKeyframes","animateMotionValue","valueTransition","_transition$elapsed","originKeyframe","targetKeyframe","isOriginAnimatable","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isZeroValueString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","MotionValue","init","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","getSize","eventManagers","passiveEffect","stopPassiveEffect","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","getOriginFromTransition","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","_visualElement$makeTa2","willChange","animations","animationTypeState","getState","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","appearId","shouldReduceMotion","remove","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","_ref3","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","prevIsPresent","prevPresenceContext","exitAnimation","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","maxDepth","getVariableValue","depth","_parseCSSVariable","exec","_match","parseCSSVariable","_parseCSSVariable2","fallback","getComputedStyle","getPropertyValue","resolveCSSVariables","obj","_objectDestructuringEmpty","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","elementId","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","data","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","args","SVGElement","_this$options","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","canSkip","_this$options4","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","_ref12","_ref13","scrollTo","unitConversion","hasPositionalKey","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parseDomVariant","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","_get","Reflect","bind","property","receiver","base","object","getPrototypeOf","desc","getOwnPropertyDescriptor","SVGVisualElement","getAttribute","_getPrototypeOf","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig","any","useLayoutEffect"],"sourceRoot":""}