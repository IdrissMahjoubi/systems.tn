{"version":3,"file":"static/js/66.119d3ade.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../node_modules/framer-motion/dist/es/utils/use-force-update.mjs","../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs"],"sourcesContent":["import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n","import * as React from 'react';\nimport { useId, useRef, useInsertionEffect } from 'react';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (React.createElement(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size }, React.cloneElement(children, { ref })));\n}\n\nexport { PopChild };\n","import * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? undefined : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = React.createElement(PopChild, { isPresent: isPresent }, children);\n    }\n    return (React.createElement(PresenceContext.Provider, { value: context }, children));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    let [forceRender] = useForceUpdate();\n    const forceRenderLayoutGroup = useContext(LayoutGroupContext).forceRender;\n    if (forceRenderLayoutGroup)\n        forceRender = forceRenderLayoutGroup;\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exiting = new Set();\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exiting.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map((child) => (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child)))));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1) {\n            exiting.add(key);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exiting.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach((key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        const onExit = () => {\n            allChildren.delete(key);\n            exiting.delete(key);\n            // Remove this child from the present children\n            const removeIndex = presentChildren.current.findIndex((presentChild) => presentChild.key === key);\n            presentChildren.current.splice(removeIndex, 1);\n            // Defer re-rendering until all exiting children have indeed left\n            if (!exiting.size) {\n                presentChildren.current = filteredChildren;\n                if (isMounted.current === false)\n                    return;\n                forceRender();\n                onExitComplete && onExitComplete();\n            }\n        };\n        childrenToRender.splice(insertionIndex, 0, React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exiting.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (React.createElement(React.Fragment, null, exiting.size\n        ? childrenToRender\n        : childrenToRender.map((child) => cloneElement(child))));\n};\n\nexport { AnimatePresence };\n","import { sync } from '../frameloop/index.mjs';\nimport { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => sync.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n","import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            sync.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                sync.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            sync.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            sync.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            sync.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { sync, cancelSync } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nfunction calculateDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxDuration ? Infinity : duration;\n}\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calculateDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay;\n        const isInDelayPhase = timeWithoutDelay < 0;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && currentTime <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        playState = \"running\";\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime) {\n            // TODO When implementing play/pause, check WAAPI\n            // logic around finished animations\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calculateDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { sync } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    const safeCancel = () => {\n        sync.update(() => animation.cancel());\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an wildcard keyframes are hydrated by the origin.\n         */\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] === null) {\n                target[i] = i === 0 ? origin : target[i - 1];\n            }\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.10.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { sync } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                sync.update(() => onDragStart(event, info));\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            sync.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        sync.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    sync.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                /**\n                 * If the parent target isn't up-to-date, force it to update.\n                 * This is an unfortunate de-optimisation as it means any updating relative\n                 * projection will cause all the relative parents to recalculate back\n                 * up the tree.\n                 */\n                if (this.relativeParent.resolvedRelativeTargetAt !==\n                    frameData.timestamp) {\n                    this.relativeParent.resolveTargetDelta(true);\n                }\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    // keyframes: [0, animationTarget],÷\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.10.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.10.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","const noop = (any) => any;\n\nexport { noop };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n"],"names":["useIsMounted","isMounted","useRef","useIsomorphicLayoutEffect","current","PopChildMeasure","prevProps","element","this","props","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","children","React","PopChild","id","useId","ref","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","context","useMemo","childId","set","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","values","register","delete","undefined","forEach","_","key","PresenceContext","Map","getChildKey","child","AnimatePresence","exitBeforeEnter","invariant","useState","forcedRenderCount","setForcedRenderCount","forceRender","useCallback","sync","useForceUpdate","forceRenderLayoutGroup","useContext","LayoutGroupContext","callback","filteredChildren","filtered","Children","isValidElement","push","onlyElements","childrenToRender","exiting","Set","presentChildren","allChildren","isInitialRender","updateChildLookup","clear","useEffect","map","presentKeys","targetKeys","numPresent","indexOf","add","get","insertionIndex","splice","removeIndex","findIndex","presentChild","has","cloneElement","createContext","frameData","delta","timestamp","isProcessing","useDefaultElapsed","runNextFrame","stepsOrder","steps","reduce","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","schedule","addToCurrentFrame","buffer","cancel","index","process","createRenderStep","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","Math","max","min","requestAnimationFrame","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","isRefObject","Object","prototype","hasOwnProperty","isVariantLabel","v","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","inherit","getCurrentTreeVariants","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","SwitchLayoutGroupContext","motionComponentSymbol","for","createMotionComponent","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","visualState","isBrowser","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","Proxy","componentCache","_target","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","right","bottom","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","transformName","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","pathSpacing","pathOffset","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","renderedChildren","camelToDash","str","replace","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","transformers","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","FocusGesture","arguments","isFocusVisible","matches","onFocus","onBlur","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","noop","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","startObserver","hasOptionsChanged","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","getColorType","find","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","warning","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","absoluteTimes","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","now","performance","types","decay","tween","calculateDuration","generator","Infinity","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","sampleDelta","requiresPregeneratedKeyframes","valueName","createAcceleratedAnimation","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZero","getZeroUnit","potentialUnitType","getValueTransition","animateMotionValue","valueTransition","isTargetAnimatable","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","isZeroValueString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","isFloat","MotionValue","init","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","getSize","eventManagers","passiveEffect","stopPassiveEffect","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","appearId","shouldReduceMotion","remove","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","prevIsPresent","prevPresenceContext","exitAnimation","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","maxDepth","getVariableValue","depth","exec","parseCSSVariable","fallback","getComputedStyle","getPropertyValue","resolveCSSVariables","obj","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","correctors","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","animationTarget","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","data","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","args","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","resolvedRelativeTargetAt","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","corrected","num","hasListeners","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","ProjectionNode","positionalKeys","isPositionalKey","hasPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","scrollTo","parseDomVariant","unitConversion","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","_get","Reflect","bind","property","receiver","base","object","getPrototypeOf","desc","getOwnPropertyDescriptor","apply","SVGVisualElement","getAttribute","createDomVisualElement","motion","baseConfig","createDomMotionConfig","any","useLayoutEffect"],"sourceRoot":""}